import{_ as s,o as n,c as a,a as l}from"./app.0cef9ea1.js";const d=JSON.parse('{"title":"Running Tests","description":"","frontmatter":{},"headers":[{"level":2,"title":"Running tests on Chromium","slug":"running-tests-on-chromium","link":"#running-tests-on-chromium","children":[]},{"level":2,"title":"Running a single test file","slug":"running-a-single-test-file","link":"#running-a-single-test-file","children":[]},{"level":2,"title":"Running tests in headed mode (with browser)","slug":"running-tests-in-headed-mode-with-browser","link":"#running-tests-in-headed-mode-with-browser","children":[]},{"level":2,"title":"Running Tests on specific browsers","slug":"running-tests-on-specific-browsers","link":"#running-tests-on-specific-browsers","children":[]},{"level":2,"title":"Running Tests on multiple browsers","slug":"running-tests-on-multiple-browsers","link":"#running-tests-on-multiple-browsers","children":[]},{"level":2,"title":"Run a set of test files","slug":"run-a-set-of-test-files","link":"#run-a-set-of-test-files","children":[]},{"level":2,"title":"Run tests by node ids","slug":"run-tests-by-node-ids","link":"#run-tests-by-node-ids","children":[]},{"level":2,"title":"Parallelism: Running Multiple Tests at Once","slug":"parallelism-running-multiple-tests-at-once","link":"#parallelism-running-multiple-tests-at-once","children":[]},{"level":2,"title":"Running Tests for Debugging","slug":"running-tests-for-debugging","link":"#running-tests-for-debugging","children":[]}],"relativePath":"python/start/running-tests.md"}'),e={name:"python/start/running-tests.md"},t=l(`<h1 id="running-tests" tabindex="-1">Running Tests <a class="header-anchor" href="#running-tests" aria-hidden="true">#</a></h1><p>You can run a single test, a set of tests or all tests. Tests can be run on one browser or multiple browsers. By default tests are run in a headless manner meaning no browser window will be opened while running the tests and results will be seen in the terminal. If you prefer you can run your tests in headed mode by using the <code>--headed</code> flag.</p><h2 id="running-tests-on-chromium" tabindex="-1">Running tests on Chromium <a class="header-anchor" href="#running-tests-on-chromium" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span></span>
<span class="line"></span></code></pre></div><h2 id="running-a-single-test-file" tabindex="-1">Running a single test file <a class="header-anchor" href="#running-a-single-test-file" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_login.py</span></span>
<span class="line"></span></code></pre></div><h2 id="running-tests-in-headed-mode-with-browser" tabindex="-1">Running tests in headed mode <em>(with browser)</em> <a class="header-anchor" href="#running-tests-in-headed-mode-with-browser" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--headed</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_login.py</span></span>
<span class="line"></span></code></pre></div><h2 id="running-tests-on-specific-browsers" tabindex="-1">Running Tests on specific browsers <a class="header-anchor" href="#running-tests-on-specific-browsers" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_login.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--browser</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webkit</span></span>
<span class="line"></span></code></pre></div><h2 id="running-tests-on-multiple-browsers" tabindex="-1">Running Tests on multiple browsers <a class="header-anchor" href="#running-tests-on-multiple-browsers" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_login.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--browser</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webkit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--browser</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firefox</span></span>
<span class="line"></span></code></pre></div><h2 id="run-a-set-of-test-files" tabindex="-1">Run a set of test files <a class="header-anchor" href="#run-a-set-of-test-files" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">testcase/test_one.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">testcase/test_two.py</span></span>
<span class="line"></span></code></pre></div><h2 id="run-tests-by-node-ids" tabindex="-1">Run tests by node ids <a class="header-anchor" href="#run-tests-by-node-ids" aria-hidden="true">#</a></h2><p>Each collected test is assigned a unique nodeid which consist of the module filename followed by specifiers like class names, function names and parameters from parametrization, separated by <code>::</code> characters.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># testcase/test_func.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Expect a title &quot;to contain&quot; a substring.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">page</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">to_have_title</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Kitchen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># create a locator</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_by_role</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Get Started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Click the get started link.</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_two</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">assert</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">((</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li>To run a specific test func within a file:</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test_func.py::test_one</span></span>
<span class="line"></span></code></pre></div><hr><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># testcase/SampleTest.py</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ClassTest</span><span style="color:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># Expect a title &quot;to contain&quot; a substring.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">page</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">to_have_title</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Kitchen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_two</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># create a locator</span></span>
<span class="line"><span style="color:#A6ACCD;">        get_started </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_by_role</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Get Started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># Click the get started link.</span></span>
<span class="line"><span style="color:#A6ACCD;">        get_started</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li>To run a specific test func within a class:</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">SampleTest.py::ClassTest::test_one</span></span>
<span class="line"></span></code></pre></div><h2 id="parallelism-running-multiple-tests-at-once" tabindex="-1">Parallelism: Running Multiple Tests at Once <a class="header-anchor" href="#parallelism-running-multiple-tests-at-once" aria-hidden="true">#</a></h2><p>If your tests are running on a machine with a lot of CPUs, you can speed up the overall execution time of your test suite by using <a href="https://pypi.org/project/pytest-xdist/" target="_blank" rel="noreferrer">pytest-xdist</a> to run multiple tests at once:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># install dependency</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytest-xdist</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># use the --numprocesses flag</span></span>
<span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--numprocesses</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">auto</span></span>
<span class="line"></span></code></pre></div><p>Depending on the hardware and nature of your tests, you can set <code>numprocesses</code> to be anywhere from <code>2</code> to the number of CPUs on the machine. If set too high, you may notice unexpected behavior.</p><h2 id="running-tests-for-debugging" tabindex="-1">Running Tests for Debugging <a class="header-anchor" href="#running-tests-for-debugging" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Mac OS</span></span>
<span class="line"><span style="color:#A6ACCD;">PWDEBUG</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> pytest -s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Window</span></span>
<span class="line"><span style="color:#A6ACCD;">$env:PWDEBUG</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">pytest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span></span>
<span class="line"></span></code></pre></div><p><img src="https://user-images.githubusercontent.com/883973/108614092-8c478a80-73ac-11eb-9597-67dfce110e00.png" alt="Debugging"></p>`,30),p=[t];function o(c,r,i,y,D,F){return n(),a("div",null,p)}const u=s(e,[["render",o]]);export{d as __pageData,u as default};
