import{_ as s,o as n,c as a,a as l}from"./app.f6bb53e8.js";const C=JSON.parse('{"title":"Writing Tests","description":"","frontmatter":{},"headers":[{"level":2,"title":"Create your first test","slug":"create-your-first-test","link":"#create-your-first-test","children":[]},{"level":2,"title":"Group multiple tests in a class","slug":"group-multiple-tests-in-a-class","link":"#group-multiple-tests-in-a-class","children":[]},{"level":2,"title":"pytest-ordering: run your tests in order","slug":"pytest-ordering-run-your-tests-in-order","link":"#pytest-ordering-run-your-tests-in-order","children":[]},{"level":2,"title":"Skipping test functions","slug":"skipping-test-functions","link":"#skipping-test-functions","children":[]}],"relativePath":"start/writing-tests.md"}'),p={name:"start/writing-tests.md"},t=l(`<h1 id="writing-tests" tabindex="-1">Writing Tests <a class="header-anchor" href="#writing-tests" aria-hidden="true">#</a></h1><p>Playwright assertions are created specifically for the dynamic web. Checks are automatically retried until the necessary conditions are met. Playwright comes with auto-wait built in meaning it waits for elements to be actionable prior to performing actions. Playwright provides an expect function to write assertions.</p><h2 id="create-your-first-test" tabindex="-1">Create your first test <a class="header-anchor" href="#create-your-first-test" aria-hidden="true">#</a></h2><p>create a new file called <code>test_func.py</code>, containing a function with this code:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_func</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Expect a title &quot;to contain&quot; a substring.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">page</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">to_have_title</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Kitchen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># create a locator</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_by_role</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Get Started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Click the get started link.</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="group-multiple-tests-in-a-class" tabindex="-1">Group multiple tests in a class <a class="header-anchor" href="#group-multiple-tests-in-a-class" aria-hidden="true">#</a></h2><p>Once you develop multiple tests, you may want to group them into a class.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SampleTest</span><span style="color:#89DDFF;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># Expect a title &quot;to contain&quot; a substring.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">page</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">to_have_title</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Kitchen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#FFCB6B;">staticmethod</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_two</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">        page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># create a locator</span></span>
<span class="line"><span style="color:#A6ACCD;">        get_started </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_by_role</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Get Started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#676E95;font-style:italic;"># Click the get started link.</span></span>
<span class="line"><span style="color:#A6ACCD;">        get_started</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="pytest-ordering-run-your-tests-in-order" tabindex="-1">pytest-ordering: run your tests in order <a class="header-anchor" href="#pytest-ordering-run-your-tests-in-order" aria-hidden="true">#</a></h2><p><a href="https://pytest-ordering.readthedocs.io/en/develop/" target="_blank" rel="noreferrer">pytest-ordering</a> is a pytest plugin to run your tests in any order that you specify. It provides custom markers that say when your tests should run in relation to each other.</p><ul><li>Install plugin with:</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytest-ordering</span></span>
<span class="line"></span></code></pre></div><p>With pytest-ordering, you can change the default ordering as follows:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> pytest</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mark</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">order</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_one</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mark</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">order</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_two</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span></code></pre></div><h2 id="skipping-test-functions" tabindex="-1">Skipping test functions <a class="header-anchor" href="#skipping-test-functions" aria-hidden="true">#</a></h2><p>With <code>@pytest.mark.skip</code>:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> playwright</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">sync_api </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> re</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> pytest</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_func</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">goto</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://lzhgostudy.github.io/playwright-kitchen/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Expect a title &quot;to contain&quot; a substring.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">expect</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">page</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">to_have_title</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">re</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compile</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Kitchen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># create a locator</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> page</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_by_role</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">link</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Get Started</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># Click the get started link.</span></span>
<span class="line"><span style="color:#A6ACCD;">    get_started</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">pytest</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mark</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">skip</span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test_two</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Page</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Reference: <a href="https://docs.pytest.org/en/stable/reference/reference.html#pytest-mark-skip-ref" target="_blank" rel="noreferrer">pytest.mark.skip</a></p></div>`,18),o=[t];function e(c,r,i,y,D,F){return n(),a("div",null,o)}const g=s(p,[["render",e]]);export{C as __pageData,g as default};
